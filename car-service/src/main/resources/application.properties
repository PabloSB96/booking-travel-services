server.port=8083

spring.datasource.url=jdbc:h2:mem:cars_db
spring.datasource.driverClassName=org.h2.Driver
spring.datasource.username=sa
spring.datasource.password=password
spring.h2.console.enabled=true
spring.h2.console.path=/h2-console
spring.h2.console.settings.trace=false

spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.H2Dialect
spring.jpa.hibernate.ddl-auto=update

spring.application.name=CAR-SERVICE
#spring.config.import=optional:configserver:http://localhost:8888

#eureka.instance.client.serverUrl.defaultZone=http://localhost:8761/eureka/
eureka.client.serviceUrl.defaultZone=http://service-registry:8761/eureka/

# Kafka
# Producer properties
#spring.kafka.producer.bootstrap-servers=127.0.0.1:9092
#spring.kafka.producer.key-serializer=org.apache.kafka.common.serialization.StringSerializer
#spring.kafka.producer.value-serializer=org.springframework.kafka.support.serializer.JsonSerializer
#spring.kafka.producer.group-id=group_producer_cars
#spring.kafka.producer.properties.spring.json.trusted.packages=com.mercedesbenz.basedomains.*
#topic.name.producer=cars_reservations_topic

# Abstract configuration
#spring.rabbitmq.addresses=127.0.0.1:5672
#spring.kafka.bootstrap-servers=127.0.0.1:9092
#spring.cloud.stream.kafka.binder.brokers=127.0.0.1:9092
spring.rabbitmq.addresses=rabbitmq:5672
spring.kafka.bootstrap-servers=kafka:9092
spring.cloud.stream.kafka.binder.brokers=kafka:9092
spring.cloud.stream.default-binder=rabbit
spring.cloud.stream.bindings.output.content-type=application/json
spring.cloud.stream.bindings.output.destination=payment_reservations_topic
spring.cloud.stream.bindings.output.group=group_producer_cars


# Common Kafka Properties
auto.create.topics.enable=true

# Kafka Consumer properties: PAYMENTS
#spring.kafka.consumer.bootstrap-servers=127.0.0.1:9092
#spring.kafka.consumer.group-id=group_consumer_cars
#spring.kafka.consumer.auto-offset-reset=earliest
#spring.kafka.consumer.key-deserializer=org.apache.kafka.common.serialization.StringDeserializer
#spring.kafka.consumer.value-deserializer=org.springframework.kafka.support.serializer.JsonDeserializer
#spring.kafka.consumer.properties.spring.json.trusted.packages=com.mercedesbenz.basedomains.*
#topic.name.consumer.payments=payment_reservations_topic
spring.cloud.stream.bindings.input-in-0.content-type=application/json
#spring.cloud.stream.bindings.input-in-0.group=group_consumer_cars
spring.cloud.stream.bindings.input-in-0.destination=payment_reservations_topic
spring.cloud.stream.bindings.input-in-0.consumer.max-attempts=1
#dlx/dlq setup
spring.cloud.stream.rabbit.bindings.input-in-0.consumer.auto-bind-dlq=true
spring.cloud.stream.rabbit.bindings.input-in-0.consumer.dlq-ttl=5000
spring.cloud.stream.rabbit.bindings.input-in-0.consumer.dlq-dead-letter-exchange=



# Retry configuration
resilience4j.retry.instances.CAR-SERVICE.maxRetryAttempts=5
resilience4j.retry.instances.CAR-SERVICE.waitDuration=2s